services:
  streamlit-app:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - 8501:8501
    env_file:
      - .env_streamlit
    restart: unless-stopped
    volumes:
      - ./src/chatbot_ui:/app/src/chatbot_ui
  api:
    build:
        context: .
        dockerfile: Dockerfile.fastapi
    ports:
      - 8000:8000
      - 5678:5678
    env_file:
      - .env_api
    restart: unless-stopped
    volumes:
      - ./src/api:/app/src/api
      - ./data:/app/data
      - ./log/api:/app/logs
    # depends_on:
    #   kafka:
    #     condition: service_healthy
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: langgraph_user
      POSTGRES_PASSWORD: langgraph_password
      POSTGRES_DB: langgraph_db
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    

  evaluator:
    build:
      context: .
      dockerfile: Dockerfile.evaluator
    ports:
      - 5679:5679
    env_file:
      - .env_evaluator
    restart: unless-stopped
    volumes:
      - ./src/evaluator:/app/src/evaluator
    depends_on:
      kafka:
        condition: service_healthy
    # Enable live reload with Docker Compose v2.20+ (if available)
    develop:
      watch:
        - path: ./src/evaluator
          action: restart
    profiles:
      - manual

  kafka:
    image: docker.io/bitnami/kafka:4.0
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]      
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    profiles:
      - manual


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      kafka:
        condition: service_healthy
    profiles:
      - manual

  qdrant:
    image: qdrant/qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - ./qdrant_storage:/qdrant/storage:z
    restart: unless-stopped


volumes:
  kafka_data:
    driver: local